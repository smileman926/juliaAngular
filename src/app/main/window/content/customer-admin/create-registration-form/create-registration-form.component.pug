app-loading.loading-bar(*ngIf="isLoading | async")
form.main(*ngIf="form", [formGroup]="form")
  .row.registration-form-type
    .col-4.pr-0
      h4 {{'BackEnd_WikiLanguage.MW_RegFormType' | translate}}:
    .col-8.pl-0.d-flex
      .form-check.mr-3(*ngFor="let regType of types; let i = index")
        input(
          type="radio",
          [id]="'regType'+i",
          name="type",
          [value]="regType.value",
          [attr.disabled]="!registrationForm?.arrived && isTypeAvailable(regType) ? null : 'disabled'",
          formControlName="type"
        )
        label([for]="'regType'+i") {{regType.name}}
  .row.mb-3
    .col-4.pr-0
      h4 {{'BackEnd_WikiLanguage.MW_RegformNumber' | translate}}:
    .col-8.pl-0
      span {{registrationForm?.number || -1}} {{selectedType?.name}}
  .row.registration-form-filters
    .col-4
      .form-group
        label.pr-3(translate) BackEnd_WikiLanguage.BW_Arrival
        app-datepicker-input(
          [date]="form.get('arrival').value",
          [disabled]="registrationForm?.arrived",
          (dateChange)="form.get('arrival').setValue($event)",
          [inputId]="'create-reg-form-arrival'"
        )
      .form-group(*ngIf="hotel.guestRegistrationProviderId === Providers.WILKEN")
        label(translate) BackEnd_WikiLanguage.MW_travelPurpose
        select.form-control(formControlName="travelPurpose")
          option(value="holiday", translate) BackEnd_WikiLanguage.wilkenJourneyReason_holiday
          option(value="cure", translate) BackEnd_WikiLanguage.wilkenJourneyReason_cure
          option(value="business", translate) BackEnd_WikiLanguage.wilkenJourneyReason_business
          option(value="sport", translate) BackEnd_WikiLanguage.wilkenJourneyReason_sport
    .col-5.grid-area.pl-0
      .form-group
        label(translate) BackEnd_WikiLanguage.MW_PlannedDeparture
        app-datepicker-input(
          [dateControl]="form.get('plannedDeparture')",
          [inputId]="'create-reg-form-planned-departure'"
        )
      .form-group
        label(translate) BackEnd_WikiLanguage.MW_RealDeparture
        app-datepicker-input(
          [dateControl]="form.get('actualDeparture')",
          [minDate]="form.get('arrival').value",
          [inputId]="'create-reg-form-actual-departure'"
        )
    .col-3.pl-5
      .form-check
        input(type="checkbox", id="arrived", formControlName="arrived")
        label(for="arrived", translate) BackEnd_WikiLanguage.MW_Arrived
      .form-check
        input(type="checkbox", id="departed", formControlName="departed")
        label(for="departed", translate) BackEnd_WikiLanguage.MW_Departed
app-individual.guests(
  *ngIf="selectedType?.category === GuestsCategory.INDIVIDUAL",
  [guests]="guests.individual.slice(0, 7)",
  (guestsChange)="guestsChange($event)",
  [canCreateNewGuest]="registrationFormService.isChannelManager || guests.individual.length < registrationFormService.linkedGuestsCount || guests.individual.length < 6",
  [arrived]="form.get('arrived').value",
  [forGroup]="false",
  (delete)="deleteGuest($event)",
  (add)="guests.individual.push($event)",
  (save)="save($event)"
)
app-group.guests(
  *ngIf="selectedType?.category === GuestsCategory.GROUP",
  [group]="guests.group",
  (leaderDataChange)="leaderChange($event)",
  [registrationFormId]="registrationFormId",
  [arrived]="form.get('arrived').value",
  (save)="saveTravelGroup($event)"
)
app-individual.guests(
  *ngIf="selectedType?.category === GuestsCategory.DETAIL_GROUP",
  [guests]="guests.individual",
  (guestsChange)="guestsChange($event)",,
  [canCreateNewGuest]="registrationFormService.isChannelManager || guests.individual.length < registrationFormService.linkedGuestsCount",
  [forGroup]="true",
  (delete)="deleteGuest($event)",
  (add)="guests.individual.push($event)",
  (save)="save($event)"
)
